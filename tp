#!/bin/bash
# -----------------------------------------------------------------------------
# Author: Sam Whang
# File  : tp.sh
# Date  : 07/17/17
# -----------------------------------------------------------------------------


# global variables
machine=""
directory=""


usage()
{
    echo "TP: [TELEPORT]"
    echo "Description: A simple cl tool to change directories"
    echo "usage:"
    echo "    linux/mac: tp [options] [dirname]"
    echo "    windows  : sh tp [options] [dirname] (NOTE: must have cygwin/bash support"
    echo "Options:"
    echo "      -a [dir name]            Add directory to teleport list"
    echo "      -d [dir name]            Remove directory from list$"
    echo "      -g [dir name]            Goes to specified directory"
    echo "      -h                       Prints help/usage string"
    echo "      -m [dir name] [dir name] Move/Rename name in list to a different name"
    echo "      -p                       Prints all path variables currently in tp"
    echo "      -r [dir name]            Remove directory name from list"
    echo "      -R                       Remove all directories"
    echo "      -t [dir name]            Test directory name by printing full path of directory"
    echo "      -u                       Update teleport list"
    echo "      -v                       Print current version of teleport"
}


version()
{
    echo "TP version: 0.0.4"
}

update()
{
    echo "Update"
}

make()
{
    # checks file level then dir level to make sure existance of tp directory
    if [[ "$machine" == "WINNY" ]]; then
        if [ ! -f ~/.bin/tp_variables.bat ]; then
            if [ ! -d ~/.bin ]; then 
                mkdir ~/.bin
            fi
            touch ~/.bin/tp_variables.bat
        fi
    elif [[ "$machine" == "MACKY" ]]; then
        if [ ! -f ~/.teleport/.aliases ]; then
            if [ ! -d ~/.teleport ]; then
                mkdir ~/.teleport
            fi
            touch ~/.teleport/tp_aliases
        fi
    fi
}

load()
{
    # load aliases into shell by running alias commands
        if [ ! -f ~/.bin/.teleport_aliases ]; then
            echo "alias file not found"
            exit -1
        fi
        echo "reading files"
        echo $PWD
        while IFS=' ' read -r line || [[ -n "$line" ]]; do
            echo "---- $1"
            if [[ *"$1"*="$line" ]]; then
                echo matches
                $mod="echo '$line'|set"
                export $line
                echo "$line"
            fi
        done < ~/.bin/.teleport_aliases.bat
}
unload()
{
    # unload aliases from shell by running unalias command
    exit 1
}

addDir()
{
    make
    echo -e "$1=$2" >> ~/.bin/.teleport_aliases
    source ~/.bin/.teleport_aliases
    echo "add done"
}


goto()
{
    echo 'goto'    
}

delDir()
{
    make
    echo "$1"
    #set -i.bak '/"$(2)/d' ~/.bin/.teleport_aliases
}


delDirs()
{
   
    if [[ "$machine" == "WINNY" ]]; then 
        rm -f ~/.bin/.teleport_aliases
        touch ~/.bin/.teleport_aliases
    fi
    echo "Cleared TP Dirations"
}
# -----------------------------------------------------------------------------
# Functions End | Argument Parsing Start
# -----------------------------------------------------------------------------

# checks for empty args
if [[ $# == "0" ]]; then
    usage && exit 0
fi

# get machine type
case "$(uname)" in
    LINUX*|DARWIN*) machine="MACKY" ;;
    CYGWIN*|MINGW*) machine="WINNY" ;;  
esac

# parses input args
while getopts "r:Ra:A:c:hvu" opt; do
    case $opt in
        \?) echo "Invalid command" && exit -1;;
        a)
            if [[ $3 == "" ]]; then
              echo "tp: option will add current working directory"
              addDir "$2" "$PWD"
              exit 1
            elif [ -d "$3" ]; then
                if [ "$machine" == "WINNY" ]; then
                    echo "Windows Machine" 
                    CWD="$(cygpath -aw $(PWD))"
                else
                    CWD="$(PWD)"
                fi
                echo $CWD
                addDir "$2" "$CWD" && exit 1
            else
                echo "tp: second argument for option invalid: not a directory"
                exit -1
            fi
        ;;
        c)
            if [[ $3 == "" ]]; then 
                echo "tp: option requires a second argument -- c" 
            fi
            exit 1
        ;; 
        d) echo "delete from list" && exit 1 ;;
        g) echo "go to path in list" && exit 1 ;;
        h) echo "print help/usage" && exit 1 ;;
        m) echo "move path to different name" && exit 1 ;;
        p) echo "print all paths in list" && exit 1 ;; 
        r) delDir "$2" && exit 1 ;;
        R) delDirs && exit 1 ;;
        t) echo "test path" && exit 1 ;;
        u) update && exit 1 ;;
        v) version && exit 1 ;;
    esac
done
