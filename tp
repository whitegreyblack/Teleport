#!/bin/bash
# -----------------------------------------------------------------------------
# Author: Sam Whang
# File  : tp [ for MICROSOFT/MS ]
# Date  : 07/17/17
# -----------------------------------------------------------------------------

# EXIT 0(TRUE), 1(FALSE)

# global variables
machine=""
directory=""
debug=true

debug()
{
    if [ "$debug" = true ] ; 
    then
        echo "$1" > debug.log ;
    fi    
}

usage()
{
    echo "TP: [TELEPORT]"
    echo "Description: A simple cl tool to change directories"
    echo "usage:"
    echo "    linux/mac: tp [options] [dirname]"
    echo "    windows  : sh tp [options] [dirname] (NOTE: must have cygwin/bash support"
    options
    version
}

options()
{
    echo "Options:"
    echo "      -a [dir name]            Add directory to teleport list"
    echo "      -d [dir name]            Remove directory from list$"
    echo "      -g [dir name]            Goes to specified directory"
    echo "      -h                       Prints help/usage string"
    echo "      -m [dir name] [dir name] Move/Rename name in list to a different name"
    echo "      -p                       Prints all path variables currently in tp"
    echo "      -r [dir name]            Remove directory name from list"
    echo "      -R                       Remove all directories"
    echo "      -s                       Source all directories"
    echo "      -t [dir name]            Test directory name by printing full path of directory"
    echo "      -u                       Update teleport list"
    echo "      -v                       Print current version of teleport"
}


version()
{
    echo "TP version: 0.0.6"
}

update()
{
    echo "Update"
}

load()
{
    # load aliases into shell by running alias commands
    if [ ! -f ~/.teleport/.tp_aliases ]; then
        echo "alias file not found"
        exit 1
    fi
    echo "reading files"
    echo $PWD
    while IFS=' ' read -r line || [[ -n "$line" ]]; do
        echo "---- $1"
        if [[ *"$1"*="$line" ]]; then
            echo matches
            $mod="echo '$line'|set"
            export $line
            echo "$line"
        fi
    done < ~/.bin/.teleport_aliases.bat
}
unload()
{
    # unload aliases from shell by running unalias command

    exit 1
}
refresh()
{
    if [[ -f ~/.teleport/.tp_aliases ]]; then
      echo "file exists"
    fi
    [[ -f ~/.teleport/.tp_aliases ]] && echo "easd"
}
addPath()
{
    echo -e "alias $1='cd $2'" >> ~/.teleport/.tp_aliases
    refresh
}


goto()
{
    echo 'goto'    
}

delDir()
{
    make
    echo "$1"
    #set -i.bak '/"$(2)/d' ~/.bin/.teleport_aliases
}


delDirs()
{
   
    if [[ "$machine" == "WINNY" ]]; then 
        rm -f ~/.bin/.teleport_aliases
        touch ~/.bin/.teleport_aliases
    fi
    echo "Cleared TP Dirations"
}

# -----------------------------------------------------------------------------
# Functions End | Argument Parsing Start
# -----------------------------------------------------------------------------

# checks for empty args
if [[ $# == "0" ]]; then
    usage && exit 1
fi

# parses input args
while getopts "a:cd:ghlm:rRstuv" opt; do
    case $opt in
        \?) echo "Invalid command" && options && exit -1;;
        a)
            if [[ $3 == "" ]]; then
                echo "tp: option will add current working directory"
                addPath "$2" "$PWD"
            elif [ -d "$3" ]; then
                echo "Windows Machine" 
                CWD="$(cygpath -aw $(PWD))"
                echo $CWD
                addPath "$2" "$CWD"
            else
                echo "tp: second argument for option invalid: not a directory"
            fi
        ;;
        c)
            [ -f ~/.teleport/.tp_aliases ] && cat ~/.teleport/.tp_aliases
        ;;
        d) 
            delPath
        ;;
        g) echo "go to path in list" && exit 1 ;;
        h) usage && exit 1 ;;
        l) echo "print all paths" && exit 1 ;;
        m) if [[ $3 == "" ]]; then 
              options
           fi
           exit 1 
        ;;
        r) delDir "$2" && exit 0 ;;
        R) delDirs && exit 0 ;;
        s) source ~/.bashrc ;;
        t) echo "test path" && exit 1 ;;
        u) update && exit 1 ;;
        v) version && exit 1 ;;
    esac
done
. ~/.bashrc
